@inject NavigationManager NavigationManager
@inject ILocalStorageService _localStorage
@inject AuthenticationStateProvider AuthStateProvider

<AuthorizeView>
    <Authorized>
        <button @onclick="Logout" class="btn danger">Logout</button>
    </Authorized>
    <NotAuthorized>
        <button @onclick="Login" class="btn info">Login/Register</button>
    </NotAuthorized>
</AuthorizeView>



@code {
    void Login()
    {
        NavigationManager.NavigateTo("login");
    }

    async Task Logout()
    {
        await _localStorage.RemoveItemAsync("idToken");
        await _localStorage.RemoveItemAsync("idTokenExpirationDate");
        await _localStorage.RemoveItemAsync("refreshToken");
        await _localStorage.RemoveItemAsync("userId");
        await _localStorage.RemoveItemAsync("keepLoggedIn");
        await AuthStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("/");
    }
}