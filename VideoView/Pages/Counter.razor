@page "/counter"
@*@attribute [Authorize]*@


@using Newtonsoft.Json;
@using VideoView.Models.Cat;
@using VideoView.Models.Category;
@using VideoView.Models.Dto;
@using VideoView.Services.AuthService;
@using VideoView.Services.CategoriesService;
@using VideoView.Services.UsersService;
@inject ILocalStorageService _localStorage
@inject AuthenticationStateProvider AuthStateProvider
@inject IUsersService _usersService
@inject ICategoriesService _categoriesService
@inject IAuthService _authService
@inject HttpClient client;

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<button class="btn btn-primary" @onclick="Authorize">Token In</button>
<button class="btn btn-primary" @onclick="Unauthorize">Token Out</button>

<br />
<br />

<p>@text</p>

<AuthorizeView>
    <Authorized>
        <span>Authorized</span>
    </Authorized>
    <NotAuthorized>
        <span>Nope authorized</span>
    </NotAuthorized>
</AuthorizeView>

<br />
<br />
<iframe width="560" height="315" src="https://www.youtube.com/embed/oJYGSy6fRic" frameborder="0" allow="accelerometer; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
<br />
<br />

<Video Source="@("https://www.youtube.com/embed/tgbNymZ7vqY")" />

<br />
<br />
video from file
<video controls="controls" width="600px" height="500px">
    <source src="video_example.mp4" />
</video>
<br />
<br />
video from youtube
<video controls="controls" width="600px" height="500px">
    <source src="https://www.youtube.com/embed/tgbNymZ7vqY" />
</video>
<br />
<br />
blazored
<BlazoredVideo class="w-100"
               style="max-width:800px;"
               controls="controls">
    <source src="https://youtu.be/tgbNymZ7vqY" type="video/mp4" />
</BlazoredVideo>
<br />
<br />
<embed src="https://www.youtube.com/embed/tgbNymZ7vqY" />
<br />
<br />
<body>
    <object data='https://www.youtube.com/embed/tgbNymZ7vqY'
            width='500px' height='300px'>
    </object>
    <br>
    <embed src="https://www.youtube.com/embed/tgbNymZ7vqY" type="">
</body>



<button class="btn btn-primary" @onclick="CheckTime">Check time</button>
<br />
<button class="btn btn-primary" @onclick="LoggedIn">LoggedIn</button>

@code {
    private int currentCount = 0;



    private string text;

    void OnPlay()
    {
        Console.WriteLine("asd");

    }

    protected override async Task OnInitializedAsync()
    {
        await _localStorage.SetItemAsync<DateTime>("dabar", DateTime.Now.AddSeconds(30));
    }

    async void LoggedIn()
    {
        await _localStorage.SetItemAsync<bool>("keepLoggedIn", true);
    }

    async void CheckTime()
    {
        //client.DefaultRequestHeaders.Clear();
        //await _authService.RefreshTokens();
        //var dto = await client.PostAsJsonAsync("https://securetoken.googleapis.com/v1/token?key=AIzaSyAtMYXiTMigdvDTG6B4V6MP768GL591NVo", new
        //{
        //    grant_type = "refresh_token",
        //    refresh_token = "APJWN8c_MSYTh6nWgGdFpXbDEFCEybIskT6K2yUgd9bGA7LSX1SQ5ItGR1t6nvg_NvcYIbk32M2fK54OUWeIwIEH_umgfEVhNLBgl9S4qbR-qyPP_MHB_uhg8J7Mc0t_9lrejDK1gKS2xecuG8t_p3QMTQPwXhGqyKjvGHGlbuACmpjqaw4X142GG6LCmnv0LbrDfVAMiazzVLW3Ut3L6IriuVcDFjWIbQ"
        //});

        //if (await _authService.RefreshTokens())
        //{
        //    Console.WriteLine("refreshed");
        //}
        //else
        //{
        //    Console.WriteLine("not refreshed");
        //}

        //DateTime check = await _localStorage.GetItemAsync<DateTime>("dabar");
        //if (await _localStorage.ContainKeyAsync("daba"))
        //{
        //    Console.WriteLine("Rasta");
        //}
        //else
        //{
        //    Console.WriteLine("Nerasta");
        //}
        //if(check < DateTime.Now)
        //{
        //    Console.WriteLine("it's too late...");
        //}
        //else
        //{
        //    Console.WriteLine("Not too late");
        //}

    }

    private async void Authorize()
    {
        string token1 = "eyJhbGciOiJSUzI1NiIsImtpZCI6IjE1YzJiNDBhYTJmMzIyNzk4NjY2YTZiMzMyYWFhMDNhNjc3MzAxOWIiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vcm9sa2EtdmlkZW9zbXRoIiwiYXVkIjoicm9sa2EtdmlkZW9zbXRoIiwiYXV0aF90aW1lIjoxNjc3MzUwNDA3LCJ1c2VyX2lkIjoiOVNJNFJ4aU1jWVljajQ5ZFVwYVFZSm9jY2VIMyIsInN1YiI6IjlTSTRSeGlNY1lZY2o0OWRVcGFRWUpvY2NlSDMiLCJpYXQiOjE2NzczNTA0MDcsImV4cCI6MTY3NzM1NDAwNywiZW1haWwiOiJwYXN0ZWxpc0BwYXN0LmNvbSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJwYXN0ZWxpc0BwYXN0LmNvbSJdfSwic2lnbl9pbl9wcm92aWRlciI6InBhc3N3b3JkIn19.tzSpK5WuRfgf61HVKGtBlr8rclhCvreFkWdk7TA-v5xe0xg4VsOYekDYq08jlBz0QMjyH6EWw-9yuj9GNtqlfRMrqZ6xBHjsIvZQhde5zCuksdMgFP7uOvpKx-vG-e0490o49WeKsr1J-f_ak0PjXe2Qt9Mol7TAq4xgz6KPllqqQX795NEyurCelmh0oBAfzWUw-Uj_d3MoqLTnofXXR7mtdvOqT_PhljA6usNWUyx_NhcepPZa5m3JrmvJ0OmQuwoXDI5yBSU4t-lu7QSVysiw1KnpD3mqpY5HYcFww1Wp93PTTGMpRmAYu1DJwQqscNAwhtBR5VeXhKtE06bsEA";
        await _localStorage.SetItemAsync("idToken", token1);
        AuthStateProvider.GetAuthenticationStateAsync();
    }
    private async void Unauthorize()
    {
        await _localStorage.RemoveItemAsync("idToken");
        AuthStateProvider.GetAuthenticationStateAsync();
    }

    private async void IncrementCount()
    {
        currentCount++;

        //var result3 = await client.GetStringAsync("https://firestore.googleapis.com/v1/projects/rolka-videosmth/databases/(default)/documents/cats");
        //var result = await client.GetAsync("https://firestore.googleapis.com/v1/projects/rolka-videosmth/databases/(default)/documents/cats");
        //Cat result2 = await client.GetFromJsonAsync<Cat>("https://firestore.googleapis.com/v1/projects/rolka-videosmth/databases/(default)/documents/cats/katinc");
        //var result = await client.GetFromJsonAsync<List<Cat>>("https://firestore.googleapis.com/v1/projects/rolka-videosmth/databases/(default)/documents/cats");



        //Cat cat = new Cat();
        //cat.fields.name.stringValue = "VARDENIS";
        //string ser = JsonConvert.SerializeObject(cat.fields);
        //var result = await client.PostAsJsonAsync($"https://firestore.googleapis.com/v1/projects/rolka-videosmth/databases/(default)/documents/cats", new { fields = cat.fields });

        //CatDocuments myDeserializedClass = JsonConvert.DeserializeObject<CatDocuments>(result3);

        //List<Cat> katenai = myDeserializedClass.documents;

        //Cat CC = katenai.FirstOrDefault(k => k.fields.name.stringValue == "vardenis");
        //text = CC.name;

        string key = "AIzaSyAtMYXiTMigdvDTG6B4V6MP768GL591NVo";

        //UserRegisterDto dto = new UserRegisterDto();
        //dto.email = "Userrr@user.user";
        //dto.password = "UserUser11";
        //dto.returnSecureToken = true;
        //var result = await client.PostAsJsonAsync($"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key={key}", new
        //{
        //    email = "Petras@gmail.com",
        //    password = "SLAPTASzodis",
        //    returnSecureToken = "true"
        //});

        //var result = await client.PostAsJsonAsync($"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key={key}", new
        //{
        //    email = "Petras@gmail.com",
        //    password = "SLAPTASzodis",
        //    returnSecureToken = true
        //});

        //AuthUserDto dto = new AuthUserDto();
        //dto.email = "Userrr@user.user";
        //dto.password = "UserUser11";
        //dto.returnSecureToken = true;
        //var result = await client.PostAsJsonAsync($"https:identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAtMYXiTMigdvDTG6B4V6MP768GL591NVo", dto);


        //UserRegisterDto dto = new UserRegisterDto();
        //dto.email = "User@user.user";
        //dto.password = "UserUser11";
        //dto.returnSecureToken = true;
        //var result = await client.PostAsJsonAsync($"https:identitytoolkit.googleapis.com/v1accounts:signInWithPassword?key=AIzaSyAtMYXiTMigdvDTG6B4V6MP768GL591NVo", dto);

        //List<Category> categories = await _categoriesService.GetAllCategories("u1");
        //List<Category> categories2 = await _categoriesService.GetAllCategories("u2");
        //Console.WriteLine("asd");

        //if (await _usersService.AddUser("u2"))
        //{
        //    Console.WriteLine("Vartotojas pridetas sekmingai");
        //}
        //else Console.WriteLine("Vartotojas nepridetas");

        //text = "CCC";
        //StateHasChanged();

    }
}
