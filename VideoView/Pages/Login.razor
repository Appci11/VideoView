@page "/login"
@using VideoView.Models.Dto;
@using VideoView.Services.AuthService;

@inject NavigationManager _navigationManager
@inject IAuthService _authService
@inject ILocalStorageService _localStorage

<body>
    <h3>Login</h3>
    <MudItem xs="12" sm="7" Style="padding-bottom:5px;">
        <EditForm Model="@user" OnValidSubmit="HandleLogin">
            <MudTextField @bind-Value="user.email" T="string" Label="E-mail" Required="true" @ref="focusTarget" />
            <MudTextField @bind-Value="user.password" T="string" Label="Password" InputType="InputType.Password" Required="true" />
            <br />
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Prisijungti</MudButton>
        </EditForm>
    </MudItem>

    <br />
    <input id="stayLoggedInCheck" type="checkbox" @bind="stayLoggedIn">
    <label for="stayLoggedInCheck">Likti prisijungus</label>
    <br />
    <p style="color: red">@ErrorMsg</p>
    <br />
    <div>
        Do not have account? <a href="register">Register</a>
    </div>
</body>

@code {
    AuthUserDto user = new AuthUserDto();
    private MudTextField<string> focusTarget;
    private string ErrorMsg = string.Empty;
    public bool stayLoggedIn { get; set; } = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            focusTarget.FocusAsync();
    }

    async Task HandleLogin()
    {
        AuthResponseDto dto = await _authService.Login(user, stayLoggedIn);
        if(dto != null)
        {
            ErrorMsg = string.Empty;

            _navigationManager.NavigateTo("/");
        }
        else
        {
            ErrorMsg = "Failed to login. Check email and password.";
        }
    }
}
